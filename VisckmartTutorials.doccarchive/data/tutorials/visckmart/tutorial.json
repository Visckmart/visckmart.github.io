{"kind":"project","hierarchy":{"paths":[["doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents\/Cabe-alho"]],"reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Ponto-de-Partida","kind":"task"},{"reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Obter-a-Altura-do-Cabe%C3%A7alho","kind":"task"},{"reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Obtendo-Informa%C3%A7%C3%B5es-da-Rolagem","kind":"task"},{"kind":"task","reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Utilizando-as-Informa%C3%A7%C3%B5es-Obtidas"},{"kind":"task","reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Resultado"}],"reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial"}],"reference":"doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents\/Cabe-alho"}]},"identifier":{"url":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial","interfaceLanguage":"swift"},"metadata":{"title":"Implementando um cabeçalho que reage à rolagem em SwiftUI","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"Victor Martins"},"variants":[{"paths":["\/tutorials\/visckmart\/tutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"kind":"hero","estimatedTimeInMinutes":15,"chapter":"Cabeçalho","video":"ScreenRecording_11-30-2024 23-19-08_1.mp4","content":[{"inlineContent":[{"text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Para decidir qual deve ser a cor do fundo do cabeçalho, vamos precisar saber se ele está cobrindo ou não o conteúdo da ScrollView.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Para isso, vamos:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Obter a altura do cabeçalho"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Obter o quanto a ScrollView rolou"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Decidir a cor com base nas informações acima"}],"type":"paragraph"}]}]}],"title":"Implementando um cabeçalho que reage à rolagem em SwiftUI"},{"kind":"tasks","tasks":[{"title":"Ponto de Partida","stepsSection":[{"media":null,"code":"01.swift","runtimePreview":"B44BBA70-842E-49A0-A874-5D8E2136A77C_1_102_o.jpeg","type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"A estrutura inicial da nossa View é essa."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Para adicionar um cabeçalho à uma View em SwiftUI, podemos utilizar o modifier "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareainset(edge:alignment:spacing:content:)-6gwby","type":"reference","isActive":true},{"type":"text","text":" desta maneira."}],"type":"paragraph"}],"code":"02.swift","caption":[],"runtimePreview":"084D8639-4EF6-4ED0-8C62-8614E1CF983A_1_105_c.jpeg","media":null,"type":"step"},{"runtimePreview":"084D8639-4EF6-4ED0-8C62-8614E1CF983A_1_105_c.jpeg","content":[{"type":"paragraph","inlineContent":[{"text":"Esse modifier fará com que o conteúdo do cabeçalho fique preso ao topo da tela, ao invés de rolar junto com o conteúdo da ","type":"text"},{"code":"ScrollView","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Além disso, ele fará o cabeçalho invadir a safe area (se possível) e ajustará a "},{"type":"codeVoice","code":"ScrollView"},{"type":"text","text":" para que o conteúdo dela não inicie coberto pelo cabeçalho, mas abaixo dele."}]}],"type":"step","caption":[],"media":null,"code":"02.swift"}],"anchor":"Ponto-de-Partida","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"heading","level":3,"text":"Pré-requisitos","anchor":"Pr%C3%A9-requisitos"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Uma View que contém o conteúdo da ScrollView. Iremos chamá-la de "},{"type":"codeVoice","code":"ScrollContentView"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Uma View que contém o conteúdo do cabeçalho. Iremos chamá-la de "},{"type":"codeVoice","code":"HeaderContentView"},{"text":".","type":"text"}]}]}]}]}]},{"contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"trailing"}],"stepsSection":[{"caption":[],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Vamos declarar uma variável @State para guardar a altura do cabeçalho.","type":"text"}]}],"code":"hh.swift","runtimePreview":null},{"code":"onGeometryChangeBase.swift","caption":[{"style":"note","name":"Argumentos do Modifier","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"type"},{"type":"text","text":": o tipo do valor a ser observado;"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"transform","type":"codeVoice"},{"text":": uma closure que recebe a geometria da View e retorna qual aspecto dessa geometria vai ser observada, no nosso caso a altura;","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"action","type":"codeVoice"},{"text":": uma closure que contém a ação a ser tomada a partir do momento em que alguma mudança na geometria for observada.","type":"text"}],"type":"paragraph"}]}]}]}],"content":[{"inlineContent":[{"type":"text","text":"Para obter a altura do cabeçalho, vamos utilizar o novo modifier "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/ongeometrychange(for:of:action:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null},{"code":"onGeometryChange.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"O "},{"type":"codeVoice","code":"type"},{"type":"text","text":" será "},{"code":"CGFloat","type":"codeVoice"},{"text":", já que queremos observar uma altura, que tem o tipo ","type":"text"},{"type":"codeVoice","code":"CGFloat"},{"text":";","type":"text"},{"type":"text","text":" "},{"type":"text","text":"O "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" receberá o keypath "},{"code":"\\.size.height","type":"codeVoice"},{"text":", para nos referirmos à propriedade da altura;","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"runtimePreview":null},{"type":"step","content":[{"inlineContent":[{"type":"text","text":"Para a "},{"type":"codeVoice","code":"action"},{"text":", temos uma closure que armazena a altura em uma variável ","type":"text"},{"type":"codeVoice","code":"@State"},{"text":" declarada na nossa View principal. Isso vai permitir que possamos utilizar esse valor posteriormente.","type":"text"}],"type":"paragraph"}],"code":"onGeometryChangeAction.swift","media":null,"runtimePreview":null,"caption":[]},{"media":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"A condicional "},{"type":"codeVoice","code":"if self.headerHeight == 0"},{"type":"text","text":" serve para evitar problemas caso o cabeçalho mude de tamanho como consequência do scroll, já que a posição do scroll pode ser afetada pelo tamanho do cabeçalho."}],"type":"paragraph"}],"runtimePreview":null,"code":"onGeometryChangeAction.swift"}],"anchor":"Obter-a-Altura-do-Cabeçalho","title":"Obter a Altura do Cabeçalho"},{"title":"Obtendo Informações da Rolagem","contentSection":[{"kind":"fullWidth","content":[{"inlineContent":[{"type":"text","text":"Agora, precisamos descobrir o quanto a ScrollView rolou. A rolagem pode ser obtida ao observar posição vertical do conteúdo da ScrollView. Se o conteúdo desceu ou subiu, é porque o usuário rolou para baixo ou para cima."}],"type":"paragraph"},{"inlineContent":[{"text":"Vamos obter a posição vertical do ScrollViewContent e passá-la para cima na hierarquia, até alcançar a nossa View principal, onde faremos uso dessa posição para decidir a cor do cabeçalho.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Em SwiftUI, para fazer a passagem de informações de uma View para outra View acima dela na hierarquia, utilizamos preferences. Neste caso, vamos usar Anchor Preferences, que são preferences especializadas na geometria das Views (posicionamento, tamanho, …)."}]}]}],"anchor":"Obtendo-Informações-da-Rolagem","stepsSection":[{"type":"paragraph","inlineContent":[{"text":"Para utilizar uma preference, precisamos de uma chave. Uma chave é composta por um identificador, um tipo associado ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" e uma operação de ","type":"text"},{"code":"reduce","type":"codeVoice"},{"text":".","type":"text"}]},{"media":null,"content":[{"inlineContent":[{"text":"Aqui está a declaração da nossa chave.","type":"text"}],"type":"paragraph"}],"code":"preference.swift","runtimePreview":null,"caption":[{"inlineContent":[{"text":"Ela conforma ao protocolo ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/preferencekey","isActive":true},{"type":"text","text":", seu identificador é o próprio nome da "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" e a operação "},{"code":"reduce","type":"codeVoice"},{"type":"text","text":" apenas guarda o novo valor no lugar do antigo. O tipo associado "},{"code":"Value","type":"codeVoice"},{"text":" é um ","type":"text"},{"type":"codeVoice","code":"Anchor<CGPoint>?"},{"type":"text","text":", o que significa que a nossa preference guarda um ponto que está associado a (ancorado) a uma View."}],"type":"paragraph"}],"type":"step"},{"type":"step","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Como a nossa anchor preference será bem simples, não vamos nos aprofundar na explicação delas, mas elas são bastante poderosas e dominar a operação de ","type":"text"},{"code":"reduce","type":"codeVoice"},{"text":" pode ser bastante útil!","type":"text"}]}],"caption":[],"code":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Agora que temos uma chave, podemos fazer uso dela para armazenar o valor que gostaríamos (a posição vertical do ScrollContentView). Isso pode ser feito por meio do modifier "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/anchorpreference(key:value:transform:)"},{"text":" da seguinte maneira:","type":"text"}]}],"caption":[{"inlineContent":[{"text":"Assim, o valor a posição do topo da ","type":"text"},{"code":"ScrollContentView","type":"codeVoice"},{"type":"text","text":" é associado à chave "},{"code":"ScrollPositionPreferenceKey","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"code":"anchorpreference.swift","runtimePreview":null,"media":null}]},{"contentSection":[{"kind":"fullWidth","content":[{"inlineContent":[{"type":"text","text":"Para ler o valor de uma PreferenceKey alguns modifiers estão disponíveis. O ideal no nosso caso seria um modifier que cria um safe area inset (como vimos no começo) a partir de um preference value. Infelizmente, até o momento não há um modifier com essa capacidade."}],"type":"paragraph"}]}],"stepsSection":[{"runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Para utilizar o valor da PreferenceKey ao mostrar o cabeçalho, vamos removê-lo do "},{"type":"codeVoice","code":".safeAreaInset"},{"type":"text","text":" e colocá-lo em um "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/overlaypreferencevalue(_:_:)","isActive":true},{"type":"text","text":"."}]}],"code":"overlayPreferenceValue.swift","type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"Esse modifier recebe a PreferenceKey e cria um overlay a partir do seu valor. No nosso exemplo, vamos utilizar a posição vertical do ScrollViewContent para criar um cabeçalho com uma cor que depende desse valor.","type":"text"}]}]},{"inlineContent":[{"text":"É importante destacar que um safe area inset é diferente de um simples overlay, uma vez que o inset ajusta automaticamente o conteúdo da ScrollView para que ele não inicie sendo coberto pelo inset.","type":"text"}],"type":"paragraph"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Para contornar essa limitação, vamos ajustar a posição inicial da ScrollView por meio do modifier ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareapadding(_:)-5lh9p","type":"reference","isActive":true},{"text":".","type":"text"}]}],"media":null,"runtimePreview":null,"code":"safeareapadding.swift","caption":[]},{"caption":[],"type":"step","media":null,"code":"geometryreader.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Observe que o conteúdo do "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/overlaypreferencevalue(_:_:)","type":"reference","isActive":true},{"type":"text","text":" faz uso de uma variável chamada geometryProxy. Para obter o valor concreto de uma Anchor, que no nosso caso veio da nossa PreferenceKey, ela precisa ser passada para um GeometryProxy. Para isso, é necessário encapsular a View em um GeometryReader. Por conta disso o GeometryReader é o topo da hierarquia da nossa View principal."}]}]}],"anchor":"Utilizando-as-Informações-Obtidas","title":"Utilizando as Informações Obtidas"},{"stepsSection":[{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Não se esqueça de adicionar o "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/accessibilitytraits","type":"reference"},{"text":" ","type":"text"},{"code":"isHeader","type":"codeVoice"},{"type":"text","text":" para ajudar na navegação dos usuários que fazem uso dos recursos de acessibilidade."}],"type":"paragraph"}],"caption":[],"type":"step","code":"accessibility.swift","media":null},{"caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"E para alcançar uma transição mais fluida, adicione uma animação na troca de cor do fundo do cabeçalho."}],"type":"paragraph"}],"code":"animation.swift","runtimePreview":"ScreenRecording_11-30-2024 23-19-08_1.mp4","type":"step"}],"anchor":"Resultado","title":"Resultado","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Desta maneira, temos a implementação de um cabeçalho capaz de reagir à rolagem de uma ScrollView de maneira eficiente."}]}]}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"safeareapadding.swift":{"content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","                .anchorPreference(key: ScrollPositionPreferenceKey.self, value: .top) { anchor in","                    return anchor","                }","        }","        .safeAreaPadding(.top, self.headerHeight)","        .overlayPreferenceValue(ScrollPositionPreferenceKey.self, alignment: .top) { bounds in","            if let bounds {","                \/\/\/ Posição vertical da ScrollContentView","                let scrollOffset = geometryProxy[bounds].y","                \/\/\/ É transparente se a posição vertical estiver mais abaixo do que a altura do cabeçalho","                let isTransparent = scrollOffset >= self.headerHeight","                ","                HeaderContentView(transparent: isTransparent)","                    .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                        \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                        \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                        if self.headerHeight == 0 {","                            self.headerHeight = newHeight","                        }","                    })","            }","        }","    }","}"],"type":"file","highlights":[{"line":14}],"fileName":"TutorialView.swift","fileType":"swift","identifier":"safeareapadding.swift","syntax":"swift"},"onGeometryChangeAction.swift":{"syntax":"swift","type":"file","fileType":"swift","fileName":"TutorialView.swift","content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","        }","        .safeAreaInset(edge: top) {","            HeaderContentView()","                .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                    \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                    \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                    if self.headerHeight == 0 {","                        self.headerHeight = newHeight","                    }","                })","        }","    }","    ","}"],"identifier":"onGeometryChangeAction.swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18}]},"doc://com.visckmart.tutorials/tutorials/Tutorial-Table-of-Contents/Cabe-alho":{"kind":"article","type":"topic","abstract":[],"url":"\/tutorials\/tutorial-table-of-contents\/cabe-alho","role":"article","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents\/Cabe-alho","title":"Cabeçalho"},"animation.swift":{"syntax":"swift","type":"file","fileType":"swift","content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        GeometryReader { geometryProxy in","            ScrollView {","                ScrollContentView()","                    .anchorPreference(key: ScrollPositionPreferenceKey.self, value: .top) { anchor in","                        return anchor","                    }","            }","            .safeAreaPadding(.top, self.headerHeight)","            .overlayPreferenceValue(ScrollPositionPreferenceKey.self, alignment: .top) { bounds in","                if let bounds {","                    \/\/\/ Posição vertical da ScrollContentView","                    let scrollOffset = geometryProxy[bounds].y","                    \/\/\/ É transparente se a posição vertical estiver mais abaixo do que a altura do cabeçalho","                    let isTransparent = scrollOffset >= self.headerHeight","                    ","                    HeaderContentView(transparent: isTransparent)","                        .animation(.default.speed(2), value: isTransparent)","                        .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                            \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                            \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                            if self.headerHeight == 0 {","                                self.headerHeight = newHeight","                            }","                        })","                        .accessibilityAddTraits(.isHeader)","                }","            }","        }","    }","}"],"fileName":"TutorialView.swift","identifier":"animation.swift","highlights":[{"line":24}]},"doc://com.visckmart.tutorials/tutorials/Tutorial-Table-of-Contents":{"abstract":[],"kind":"overview","title":"Tutoriais Interativos com SwiftUI","url":"\/tutorials\/tutorial-table-of-contents","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Tutorial-Table-of-Contents","role":"overview","type":"topic"},"onGeometryChangeBase.swift":{"syntax":"swift","identifier":"onGeometryChangeBase.swift","fileName":"TutorialView.swift","highlights":[{"line":13}],"content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","        }","        .safeAreaInset(edge: top) {","            HeaderContentView()","                .onGeometryChange(...)","        }","    }","    ","}"],"type":"file","fileType":"swift"},"accessibility.swift":{"syntax":"swift","type":"file","fileType":"swift","content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        GeometryReader { geometryProxy in","            ScrollView {","                ScrollContentView()","                    .anchorPreference(key: ScrollPositionPreferenceKey.self, value: .top) { anchor in","                        return anchor","                    }","            }","            .safeAreaPadding(.top, self.headerHeight)","            .overlayPreferenceValue(ScrollPositionPreferenceKey.self, alignment: .top) { bounds in","                if let bounds {","                    \/\/\/ Posição vertical da ScrollContentView","                    let scrollOffset = geometryProxy[bounds].y","                    \/\/\/ É transparente se a posição vertical estiver mais abaixo do que a altura do cabeçalho","                    let isTransparent = scrollOffset >= self.headerHeight","                    ","                    HeaderContentView(transparent: isTransparent)","                        .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                            \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                            \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                            if self.headerHeight == 0 {","                                self.headerHeight = newHeight","                            }","                        })","                        .accessibilityAddTraits(.isHeader)","                }","            }","        }","    }","}"],"fileName":"TutorialView.swift","identifier":"accessibility.swift","highlights":[{"line":31}]},"B44BBA70-842E-49A0-A874-5D8E2136A77C_1_102_o.jpeg":{"type":"image","alt":null,"identifier":"B44BBA70-842E-49A0-A874-5D8E2136A77C_1_102_o.jpeg","variants":[{"url":"\/images\/com.visckmart.tutorials\/B44BBA70-842E-49A0-A874-5D8E2136A77C_1_102_o.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swiftui/view/overlaypreferencevalue(_:_:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/overlaypreferencevalue(_:_:)","type":"link","title":".overlayPreferenceValue","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/overlaypreferencevalue(_:_:)","titleInlineContent":[{"code":".overlayPreferenceValue","type":"codeVoice"}]},"geometryreader.swift":{"content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        GeometryReader { geometryProxy in","            ScrollView {","                ScrollContentView()","                    .anchorPreference(key: ScrollPositionPreferenceKey.self, value: .top) { anchor in","                        return anchor","                    }","            }","            .safeAreaPadding(.top, self.headerHeight)","            .overlayPreferenceValue(ScrollPositionPreferenceKey.self, alignment: .top) { bounds in","                if let bounds {","                    \/\/\/ Posição vertical da ScrollContentView","                    let scrollOffset = geometryProxy[bounds].y","                    \/\/\/ É transparente se a posição vertical estiver mais abaixo do que a altura do cabeçalho","                    let isTransparent = scrollOffset >= self.headerHeight","                    ","                    HeaderContentView(transparent: isTransparent)","                        .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                            \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                            \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                            if self.headerHeight == 0 {","                                self.headerHeight = newHeight","                            }","                        })","                }","            }","        }","    }","}"],"type":"file","highlights":[{"line":8},{"line":33}],"fileName":"TutorialView.swift","fileType":"swift","identifier":"geometryreader.swift","syntax":"swift"},"doc://com.visckmart.tutorials/tutorials/Visckmart/Tutorial#Utilizando-as-Informa%C3%A7%C3%B5es-Obtidas":{"abstract":[{"text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele.","type":"text"}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/visckmart\/tutorial#Utilizando-as-Informa%C3%A7%C3%B5es-Obtidas","title":"Utilizando as Informações Obtidas","kind":"section","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Utilizando-as-Informa%C3%A7%C3%B5es-Obtidas"},"doc://com.visckmart.tutorials/tutorials/Visckmart/Tutorial":{"identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial","url":"\/tutorials\/visckmart\/tutorial","type":"topic","role":"project","abstract":[{"type":"text","text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele."}],"estimatedTime":"15min","kind":"project","title":"Implementando um cabeçalho que reage à rolagem em SwiftUI"},"02.swift":{"content":["import SwiftUI","","struct TutorialView: View {","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","        }","        .safeAreaInset(edge: top) {","            HeaderContentView()","        }","    }","    ","}"],"type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11}],"fileName":"TutorialView.swift","identifier":"02.swift","syntax":"swift"},"https://developer.apple.com/documentation/swiftui/preferencekey":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/preferencekey","type":"link","title":"PreferenceKey","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/preferencekey","titleInlineContent":[{"code":"PreferenceKey","type":"codeVoice"}]},"doc://com.visckmart.tutorials/tutorials/Visckmart/Tutorial#Resultado":{"kind":"section","type":"section","abstract":[{"text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele.","type":"text"}],"title":"Resultado","role":"pseudoSymbol","url":"\/tutorials\/visckmart\/tutorial#Resultado","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Resultado"},"onGeometryChange.swift":{"syntax":"swift","identifier":"onGeometryChange.swift","fileName":"TutorialView.swift","highlights":[{"line":13},{"line":14},{"line":15}],"content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","        }","        .safeAreaInset(edge: top) {","            HeaderContentView()","                .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                    ...","                })","        }","    }","    ","}"],"type":"file","fileType":"swift"},"anchorpreference.swift":{"highlights":[{"line":10},{"line":11},{"line":12}],"content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","                .anchorPreference(key: ScrollPositionPreferenceKey.self, value: .top) { anchor in","                    return anchor","                }","        }","        .safeAreaInset(edge: top) {","            HeaderContentView()","                .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                    \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                    \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                    if self.headerHeight == 0 {","                        self.headerHeight = newHeight","                    }","                })","        }","    }","    ","}"],"syntax":"swift","fileType":"swift","type":"file","fileName":"Tutorial.swift","identifier":"anchorpreference.swift"},"https://developer.apple.com/documentation/swiftui/view/anchorpreference(key:value:transform:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/anchorpreference(key:value:transform:)","type":"link","title":".anchorPreference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/anchorpreference(key:value:transform:)","titleInlineContent":[{"code":".anchorPreference","type":"codeVoice"}]},"doc://com.visckmart.tutorials/tutorials/Visckmart/Tutorial#Obter-a-Altura-do-Cabe%C3%A7alho":{"kind":"section","type":"section","abstract":[{"text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele.","type":"text"}],"title":"Obter a Altura do Cabeçalho","role":"pseudoSymbol","url":"\/tutorials\/visckmart\/tutorial#Obter-a-Altura-do-Cabe%C3%A7alho","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Obter-a-Altura-do-Cabe%C3%A7alho"},"https://developer.apple.com/documentation/swiftui/accessibilitytraits":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/accessibilitytraits","type":"link","title":"accessibility trait","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/accessibilitytraits","titleInlineContent":[{"text":"accessibility trait","type":"text"}]},"https://developer.apple.com/documentation/swiftui/view/safeareapadding(_:)-5lh9p":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareapadding(_:)-5lh9p","type":"link","title":".safeAreaPadding","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareapadding(_:)-5lh9p","titleInlineContent":[{"code":".safeAreaPadding","type":"codeVoice"}]},"doc://com.visckmart.tutorials/tutorials/Visckmart/Tutorial#Ponto-de-Partida":{"kind":"section","url":"\/tutorials\/visckmart\/tutorial#Ponto-de-Partida","title":"Ponto de Partida","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Ponto-de-Partida","role":"pseudoSymbol","abstract":[{"text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele.","type":"text"}],"type":"section"},"https://developer.apple.com/documentation/swiftui/view/safeareainset(edge:alignment:spacing:content:)-6gwby":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareainset(edge:alignment:spacing:content:)-6gwby","type":"link","title":".safeAreaInset","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareainset(edge:alignment:spacing:content:)-6gwby","titleInlineContent":[{"code":".safeAreaInset","type":"codeVoice"}]},"ScreenRecording_11-30-2024 23-19-08_1.mp4":{"poster":null,"identifier":"ScreenRecording_11-30-2024 23-19-08_1.mp4","type":"video","alt":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/com.visckmart.tutorials\/ScreenRecording_11-30-2024%2023-19-08_1.mp4"}]},"preference.swift":{"highlights":[],"identifier":"preference.swift","fileName":"ScrollPositionPreferenceKey.swift","syntax":"swift","type":"file","content":["import SwiftUI","","struct ScrollPositionPreferenceKey: PreferenceKey {","    typealias Value = Anchor<CGPoint>?","    ","    static func reduce(value: inout Value, nextValue: () -> Value) {","        value = nextValue()","    }","}"],"fileType":"swift"},"https://developer.apple.com/documentation/swiftui/view/ongeometrychange(for:of:action:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/ongeometrychange(for:of:action:)","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/ongeometrychange(for:of:action:)","title":".onGeometryChange","titleInlineContent":[{"code":".onGeometryChange","type":"codeVoice"}]},"doc://com.visckmart.tutorials/tutorials/Visckmart/Tutorial#Obtendo-Informa%C3%A7%C3%B5es-da-Rolagem":{"kind":"section","url":"\/tutorials\/visckmart\/tutorial#Obtendo-Informa%C3%A7%C3%B5es-da-Rolagem","type":"section","title":"Obtendo Informações da Rolagem","abstract":[{"text":"No decorrer deste artigo vamos implementar em SwiftUI um cabeçalho que muda de cor quando o conteúdo de uma ScrollView fica embaixo dele.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/com.visckmart.tutorials\/tutorials\/Visckmart\/Tutorial#Obtendo-Informa%C3%A7%C3%B5es-da-Rolagem"},"overlayPreferenceValue.swift":{"syntax":"swift","type":"file","fileType":"swift","fileName":"TutorialView.swift","content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","                .anchorPreference(key: ScrollPositionPreferenceKey.self, value: .top) { anchor in","                    return anchor","                }","        }","        .overlayPreferenceValue(ScrollPositionPreferenceKey.self, alignment: .top) { bounds in","            if let bounds {","                \/\/\/ Posição vertical da ScrollContentView","                let scrollOffset = geometryProxy[bounds].y","                \/\/\/ É transparente se a posição vertical estiver mais abaixo do que a altura do cabeçalho","                let isTransparent = scrollOffset >= self.headerHeight","                ","                HeaderContentView(transparent: isTransparent)","                    .onGeometryChange(for: CGFloat.self, of: \\.size.height, action: { newHeight in","                        \/\/ Recebemos aqui novo valor da altura e associamos à nossa variável @State","                        \/\/ Se não há uma altura estabelecida, guarde a nova altura do cabeçalho","                        if self.headerHeight == 0 {","                            self.headerHeight = newHeight","                        }","                    })","            }","        }","    }","}"],"identifier":"overlayPreferenceValue.swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}]},"hh.swift":{"type":"file","fileName":"TutorialView.swift","highlights":[{"line":5}],"fileType":"swift","identifier":"hh.swift","syntax":"swift","content":["import SwiftUI","","struct TutorialView: View {","    ","    @State var headerHeight: Double = 0","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","        }","        .safeAreaInset(edge: top) {","            HeaderContentView()","        }","    }","    ","}"]},"01.swift":{"type":"file","fileName":"TutorialView.swift","highlights":[],"fileType":"swift","identifier":"01.swift","syntax":"swift","content":["import SwiftUI","","struct TutorialView: View {","    ","    var body: some View {","        ScrollView {","            ScrollContentView()","        }","    }","    ","}"]},"084D8639-4EF6-4ED0-8C62-8614E1CF983A_1_105_c.jpeg":{"identifier":"084D8639-4EF6-4ED0-8C62-8614E1CF983A_1_105_c.jpeg","type":"image","alt":"","variants":[{"traits":["1x","light"],"url":"\/images\/com.visckmart.tutorials\/084D8639-4EF6-4ED0-8C62-8614E1CF983A_1_105_c.jpeg"}]}}}